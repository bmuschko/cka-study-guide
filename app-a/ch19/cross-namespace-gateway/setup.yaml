# Namespaces
---
apiVersion: v1
kind: Namespace
metadata:
  name: staging
---
apiVersion: v1
kind: Namespace
metadata:
  name: production
---
# ConfigMaps for nginx logging
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: staging
data:
  default.conf: |
    log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "X-Environment: $http_x_environment"';
    
    server {
        listen 80;
        server_name localhost;
        
        access_log /var/log/nginx/access.log custom;
        
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: production
data:
  default.conf: |
    log_format custom '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "X-Environment: $http_x_environment"';
    
    server {
        listen 80;
        server_name localhost;
        
        access_log /var/log/nginx/access.log custom;
        
        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
        }
    }
---
# Staging Application
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: app
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: staging-web
  namespace: staging
spec:
  selector:
    app: web
  ports:
  - port: 80
    targetPort: 80
---
# Production Application
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: production
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
    spec:
      containers:
      - name: app
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: prod-web
  namespace: production
spec:
  selector:
    app: web
  ports:
  - port: 80
    targetPort: 80